OptionProfile = function(S.vector, ...){
params = list(...)
TypeFlag = substr(tolower(params$TypeFlag), 1, 1)
X = as.numeric(params$X)
Time = as.numeric(params$Time)/252
r = as.numeric(r)
b = 0
sigma = as.numeric(params$sigma)
result = sapply(S.vector, function(x){
S = x
GBSOption(TypeFlag, S, X, Time, r, b, sigma)
})
return(result)
}
OptionProfile(1:10, TypeFlag='c', X=5, Time=30, r=0.1, sigma=0.2)
OptionProfile = function(S.vector, ...){
params = list(...)
TypeFlag = substr(tolower(params$TypeFlag), 1, 1)
X = as.numeric(params$X)
Time = as.numeric(params$Time)/252
r = as.numeric(params$r)
b = 0
sigma = as.numeric(params$sigma)
result = sapply(S.vector, function(x){
S = x
GBSOption(TypeFlag, S, X, Time, r, b, sigma)
})
return(result)
}
OptionProfile(1:10, TypeFlag='c', X=5, Time=30, r=0.1, sigma=0.2)
OptionProfile = function(S.vector, ...){
params = list(...)
TypeFlag = substr(tolower(params$TypeFlag), 1, 1)
X = as.numeric(params$X)
Time = as.numeric(params$Time)/252
r = as.numeric(params$r)
b = 0
sigma = as.numeric(params$sigma)
result = sapply(S.vector, function(x){
S = x
GBSOption(TypeFlag, S, X, Time, r, b, sigma)@price
})
return(result)
}
OptionProfile(1:10, TypeFlag='c', X=5, Time=30, r=0.1, sigma=0.2)
plot(OptionProfile(1:10, TypeFlag='c', X=5, Time=30, r=0.1, sigma=0.2))
plot(OptionProfile(1:10, TypeFlag='c', X=5, Time=0, r=0.1, sigma=0.2))
plot(OptionProfile(1:10, TypeFlag='c', X=5, Time=0.000001, r=0.1, sigma=0.2))
OptionProfile = function(S.vector, startDate, endDate, ...){
params = list(...)
TypeFlag = substr(tolower(params$TypeFlag), 1, 1)
X = as.numeric(params$X)
Time = params$Time
if(Time == 0)
Time = 0.0000001
if(Time == NULL)
Time = endDate - startDate
Time = as.numeric(params$Time)/252
r = as.numeric(params$r)
b = 0
sigma = as.numeric(params$sigma)
result = sapply(S.vector, function(x){
S = x
GBSOption(TypeFlag, S, X, Time, r, b, sigma)@price
})
return(result)
}
OptionProfile = function(S.vector, startDate=NULL, endDate=NULL, ...){
params = list(...)
TypeFlag = substr(tolower(params$TypeFlag), 1, 1)
X = as.numeric(params$X)
Time = params$Time
if(Time == 0)
Time = 0.0000001
if(Time == NULL)
Time = endDate - startDate
Time = as.numeric(params$Time)/252
r = as.numeric(params$r)
b = 0
sigma = as.numeric(params$sigma)
result = sapply(S.vector, function(x){
S = x
GBSOption(TypeFlag, S, X, Time, r, b, sigma)@price
})
return(result)
}
OptionProfile(1:10, startDate=Sys.Date(), endDate=as.Date('2015-09-15'),  TypeFlag='c', X=5, Time=0, r=0.1, sigma=0.2)
OptionProfile = function(S.vector, startDate=NULL, endDate=NULL, ...){
params = list(...)
TypeFlag = substr(tolower(params$TypeFlag), 1, 1)
X = as.numeric(params$X)
Time = params$Time
if(Time == 0)
Time = 0.0000001
if(Time == NULL)
Time = params$endDate - params$startDate
Time = as.numeric(params$Time)/252
r = as.numeric(params$r)
b = 0
sigma = as.numeric(params$sigma)
result = sapply(S.vector, function(x){
S = x
GBSOption(TypeFlag, S, X, Time, r, b, sigma)@price
})
return(result)
}
OptionProfile(1:10, startDate=Sys.Date(), endDate=as.Date('2015-09-15'),  TypeFlag='c', X=5, Time=0, r=0.1, sigma=0.2)
Sys.Date()
OptionProfile = function(S.vector, startDate=NULL, endDate=NULL, ...){
params = list(...)
TypeFlag = substr(tolower(params$TypeFlag), 1, 1)
X = as.numeric(params$X)
Time = params$Time
if(Time == 0)
Time = 0.0000001
if(is.null(Time))
Time = endDate - startDate
Time = as.numeric(params$Time)/252
r = as.numeric(params$r)
b = 0
sigma = as.numeric(params$sigma)
result = sapply(S.vector, function(x){
S = x
GBSOption(TypeFlag, S, X, Time, r, b, sigma)@price
})
return(result)
}
OptionProfile(1:10, startDate=Sys.Date(), endDate=as.Date('2015-09-15'),  TypeFlag='c', X=5, Time=0, r=0.1, sigma=0.2)
OptionProfile(1:10,   TypeFlag='c', X=5, Time=0, r=0.1, sigma=0.2)
OptionProfile = function(S.vector, startDate=NULL, endDate=NULL, ...){
params = list(...)
TypeFlag = substr(tolower(params$TypeFlag), 1, 1)
X = as.numeric(params$X)
Time = params$Time
if(Time == 0)
Time = 0.0000001
if(is.null(Time))
Time = endDate - startDate
Time = as.numeric(params$Time)/252
r = as.numeric(params$r)
b = 0
sigma = as.numeric(params$sigma)
result = sapply(S.vector, function(x){
S = x
GBSOption(TypeFlag, S, X, Time, r, b, sigma)@price
})
return(result)
}
OptionProfile = function(S.vector, startDate=NULL, endDate=NULL, ...){
params = list(...)
TypeFlag = substr(tolower(params$TypeFlag), 1, 1)
X = as.numeric(params$X)
Time = params$Time
if(Time == 0)
Time = 0.0000001
if(is.null(Time))
Time = endDate - startDate
Time = as.numeric(Time)/252
r = as.numeric(params$r)
b = 0
sigma = as.numeric(params$sigma)
result = sapply(S.vector, function(x){
S = x
GBSOption(TypeFlag, S, X, Time, r, b, sigma)@price
})
return(result)
}
OptionProfile(1:10,   TypeFlag='c', X=5, Time=0, r=0.1, sigma=0.2)
plot(
OptionProfile(1:10,   TypeFlag='c', X=5, Time=0, r=0.1, sigma=0.2)
)
OptionProfile(1:10,  startDate=Sys.Date(), endDate=as.Date('2015-09-15'), TypeFlag='c', X=5, Time=0, r=0.1, sigma=0.2)
OptionProfile(1:10,  startDate=Sys.Date(), endDate=as.Date('2015-09-15'), TypeFlag='c', X=5, r=0.1, sigma=0.2)
OptionProfile = function(S.vector, startDate=NULL, endDate=NULL, ...){
params = list(...)
TypeFlag = substr(tolower(params$TypeFlag), 1, 1)
X = as.numeric(params$X)
Time = params$Time
if(is.null(Time))
Time = endDate - startDate
if(Time == 0)
Time = 0.0000001
Time = as.numeric(Time)/252
r = as.numeric(params$r)
b = 0
sigma = as.numeric(params$sigma)
result = sapply(S.vector, function(x){
S = x
GBSOption(TypeFlag, S, X, Time, r, b, sigma)@price
})
return(result)
}
OptionProfile(1:10,  startDate=Sys.Date(), endDate=as.Date('2015-09-15'), TypeFlag='c', X=5, r=0.1, sigma=0.2)
plot(
OptionProfile(1:10,  startDate=Sys.Date(), endDate=as.Date('2015-09-15'), TypeFlag='c', X=5, r=0.1, sigma=0.2)
)
plot(
OptionProfile(1:10,  startDate=Sys.Date(), endDate=as.Date('2015-09-15'), TypeFlag='c', X=5, r=0.1, sigma=0.2),
type='l'
)
OptionProfile = function(S.vector, startDate=NULL, endDate=NULL, price=0 ...){
params = list(...)
TypeFlag = substr(tolower(params$TypeFlag), 1, 1)
X = as.numeric(params$X)
Time = params$Time
if(is.null(Time))
Time = endDate - startDate
if(Time == 0)
Time = 0.0000001
Time = as.numeric(Time)/252
r = as.numeric(params$r)
b = 0
sigma = as.numeric(params$sigma)
result = sapply(S.vector, function(x){
S = x
GBSOption(TypeFlag, S, X, Time, r, b, sigma)@price
}) - price
return(result)
}
OptionProfile = function(S.vector, startDate=NULL, endDate=NULL, price=0, ...){
params = list(...)
TypeFlag = substr(tolower(params$TypeFlag), 1, 1)
X = as.numeric(params$X)
Time = params$Time
if(is.null(Time))
Time = endDate - startDate
if(Time == 0)
Time = 0.0000001
Time = as.numeric(Time)/252
r = as.numeric(params$r)
b = 0
sigma = as.numeric(params$sigma)
result = sapply(S.vector, function(x){
S = x
GBSOption(TypeFlag, S, X, Time, r, b, sigma)@price
}) - price
return(result)
}
OptionProfile(1:10,  startDate=Sys.Date(), endDate=as.Date('2015-09-15'), price = 2, TypeFlag='c', X=5, r=0.1, sigma=0.2),
OptionProfile(1:10,  startDate=Sys.Date(), endDate=as.Date('2015-09-15'), price = 2, TypeFlag='c', X=5, r=0.1, sigma=0.2)
plot(
OptionProfile(1:10,  startDate=Sys.Date(), endDate=as.Date('2015-09-15'), price = 2, TypeFlag='c', X=5, r=0.1, sigma=0.2),
type='l'
)
OptionProfile = function(S.vector, startDate=NULL, endDate=NULL, price=0, face=1, ...){
params = list(...)
TypeFlag = substr(tolower(params$TypeFlag), 1, 1)
X = as.numeric(params$X)
Time = params$Time
if(is.null(Time))
Time = endDate - startDate
if(Time == 0)
Time = 0.0000001
Time = as.numeric(Time)/252
r = as.numeric(params$r)
b = 0
sigma = as.numeric(params$sigma)
result = sapply(S.vector, function(x){
S = x
GBSOption(TypeFlag, S, X, Time, r, b, sigma)@price
}) - price
result = result * face
return(result)
}
OptionProfile(1:10,  startDate=Sys.Date(), endDate=as.Date('2015-09-15'), price=2, face=1000, TypeFlag='c', X=5, r=0.1, sigma=0.2)
plot(
OptionProfile(1:10,  startDate=Sys.Date(), endDate=as.Date('2015-09-15'), price=2, face=1000, TypeFlag='c', X=5, r=0.1, sigma=0.2),
type='l'
)
OptionProfile = function(S.vector, startDate=NULL, endDate=NULL, price=0, face=1, ...){
library(fOptions)
params = list(...)
TypeFlag = substr(tolower(params$TypeFlag), 1, 1)
X = as.numeric(params$X)
Time = params$Time
if(is.null(Time))
Time = endDate - startDate
if(Time == 0)
Time = 0.0000001
Time = as.numeric(Time)/252
r = as.numeric(params$r)
b = 0
sigma = as.numeric(params$sigma)
result = sapply(S.vector, function(x){
S = x
GBSOption(TypeFlag, S, X, Time, r, b, sigma)@price
}) - price
result = result * face
return(result)
}
FixedIncome = function(startDate=NULL, endDate=NULL, Time=NULL, r=0, price=100, face=1){
Time = params$Time
if(is.null(Time))
Time = endDate - startDate
if(Time == 0)
Time = 0.0000001
Time = as.numeric(Time)/365
result = price * face * (1 + r * Time)
return(result)
}
FixedIncome(Time=100, r=0.1, price=100, face=1000000)
FixedIncome = function(startDate=NULL, endDate=NULL, Time=NULL, r=0, price=100, face=1){
if(is.null(Time))
Time = endDate - startDate
if(Time == 0)
Time = 0.0000001
Time = as.numeric(Time)/365
result = price/100 * face * (1 + r*Time)
return(result)
}
FixedIncome(Time=100, r=0.1, price=100, face=1000000)
plot(
OptionProfile(1:10,  startDate=Sys.Date(), endDate=as.Date('2015-09-15'), price=2, face=1000, TypeFlag='c', X=5, r=0.1, sigma=0.2) +
FixedIncome(Time=100, r=0.1, price=100, face=1000000),
type='l'
)
FixedIncome(Time=100, r=0.1, price=100, face=1000000)
FixedIncome(Time=100, r=0.1, price=100, face=1000000) +
OptionProfile(1:10,  startDate=Sys.Date(), endDate=as.Date('2015-09-15'), price=2, face=1000, TypeFlag='c', X=5, r=0.1, sigma=0.2)
plot(
assetreturn,
type='l'
)
assetreturn = FixedIncome(Time=100, r=0.1, price=100, face=1000000) +
OptionProfile(1:10,  startDate=Sys.Date(), endDate=as.Date('2015-09-15'), price=2, face=1000, TypeFlag='c', X=5, r=0.1, sigma=0.2)
OptionProfile(1:10,  startDate=Sys.Date(), endDate=as.Date('2015-09-15'), price=2, face=1000, TypeFlag='c', X=5, r=0.1, sigma=0.2)
plot(
assetreturn,
type='l'
)
FixedIncome(Time=100, r=0.1, price=100, face=1000000)
OptionProfile(1:10,  startDate=Sys.Date(), endDate=as.Date('2015-09-15'), price=2, face=1000, TypeFlag='c', X=5, r=0.1, sigma=0.2)
assetreturn = FixedIncome(Time=100, r=0.1, price=100, face=1000) +
OptionProfile(1:10,  startDate=Sys.Date(), endDate=as.Date('2015-09-15'), price=2, face=1000, TypeFlag='c', X=5, r=0.1, sigma=0.2)
plot(
assetreturn,
type='l'
)
BaseAsset = function(S.vector=0, TypeFlag=NULL, startDate=NULL, endDate=NULL, Time=NULL, r=0, price=0, face=1){
if(is.null(Time))
Time = endDate - startDate
if(Time == 0)
Time = 0.0000001
Time = as.numeric(Time)/365
if(TypeFlag=='s'){
result = (S.vector - price) * face * (1 + r*Time)
}
return(result)
}
BaseAsset = function(S.vector=0, TypeFlag=NULL, startDate=NULL, endDate=NULL, Time=NULL, r=0, price=0, face=1){
if(is.null(Time))
Time = endDate - startDate
if(Time == 0)
Time = 0.0000001
Time = as.numeric(Time)/365
if(TypeFlag=='s')
result = (S.vector - price) * face * (1 + r*Time)
if(TypeFlag=='f')
result = (S.vector - price) * face * (1 - r*Time)
return(result)
}
BaseAsset(1:10, 's', Time=365, r=0.1, price=5)
BaseAsset = function(S.vector=0, TypeFlag=NULL, startDate=NULL, endDate=NULL, Time=NULL, r=0, price=0, face=1){
if(is.null(Time))
Time = endDate - startDate
if(Time == 0)
Time = 0.0000001
Time = as.numeric(Time)/365
if(TypeFlag=='s')
result = (S.vector - price * (1 + r*Time)) * face
if(TypeFlag=='f')
result = (S.vector - price) * face * (1 - r*Time)
return(result)
}
BaseAsset(1:10, 's', Time=365, r=0.1, price=5)
BaseAsset = function(S.vector=0, TypeFlag=NULL, startDate=NULL, endDate=NULL, Time=NULL, r=0, price=0, face=1){
if(is.null(Time))
Time = endDate - startDate
if(Time == 0)
Time = 0.0000001
Time = as.numeric(Time)/365
if(TypeFlag=='s')
result = (S.vector - price * (1 + r*Time)) * face
if(TypeFlag=='f')
result = (S.vector - price  * (1 - r*Time)) * face
return(result)
}
BaseAsset(1:10, 's', Time=365, r=0.1, price=5)
BaseAsset = function(S.vector=0, TypeFlag=NULL, startDate=NULL, endDate=NULL, Time=NULL, r=0, price=0, face=1){
if(is.null(Time))
Time = endDate - startDate
if(Time == 0)
Time = 0.0000001
Time = as.numeric(Time)/365
if(TypeFlag=='s')
result = (S.vector - price * (1 + r*Time)) * face
if(TypeFlag=='f')
result = (S.vector * (1 - r*Time) - price  ) * face
return(result)
}
BaseAsset(1:10, 's', Time=365, r=0.1, price=5)
install.packages("C:/Users/User/Downloads/QUANTlab_1.1(1).zip", repos = NULL, type = "win.binary")
install.packages("QUANTlab" , repos = "http://R-Forge.R-project.org")
install.packages("C:/Users/User/Downloads/QUANTlab_1.1.zip", repos = NULL, type = "win.binary")
library("QUANTlab", lib.loc="~/R/win-library/3.2")
require(QUANTlab)
require(dplyr)
# the sticky strike method
# underlying asset range
k <- seq(55000, 70000, 500)
# Inicial portfolio
port <- data.frame(
type=c("p", "u", 'p', 'p'),
strike=c(61500, 0, 61500, 60000),
vola=c(0.21232, 0, 0.21232, 0.20488),
exp=c('15.12.2015', '15.12.2015','15.12.2015','15.12.2015'),
quant=c(2, 1, 3, -6),
trades=c(1750, 62732, 1500, 950)
)
# +--- Portfolio securities codes ---+
baseasset = 'Si'
seccodes = sapply(c(1:nrow(port)), function(x){
cursec = port[x,]
MakeSecCode(baseasset, cursec$type, cursec$exp, cursec$strike)
})
# +--- Get current market volatility ---+
marketinfo = boardDownload('Si-12.15')
futinfo = futureCurrentInfo(marketinfo)
optsinfo = optionsCurrentInfo(marketinfo)
optsinfo = rbind(
optsinfo[[as.character(port$exp[1])]][['puts']],
optsinfo[[as.character(port$exp[1])]][['calls']]
)
ivs = optsinfo %>% filter(code %in% seccodes) %>% select(code, iv) %>% left_join(data.frame(code = seccodes), .)
ivs[which(is.na(ivs$iv)), 'iv'] = 0
port$vola = ivs$iv/100
# +------------------------------------------------+
# | Generate security code for futures and options
# +------------------------------------------------+
MakeSecCode = function(ba, type, expdate, strike = NULL){
expdate = as.Date(x = expdate, format = '%d.%m.%Y')
nmonth = as.numeric(format(expdate, "%m"))
year = substr(format(expdate, "%y"), 2, 2 )
if(type %in% c('f','u') )  {
month = substr(c("FGHJKMNQUVXZ"),nmonth,nmonth)
return(paste0(ba, month, year))
} else {  # c or p
if(type=='c') nltrs=c(1:12) else nltrs=c(13:24)
return(paste0(ba, strike, 'B', LETTERS[nltrs][nmonth], year) )
}
return(0)
}
# MakeSecCode('Si', 'c', '15.12.2015', 31000)
# +--------------------------------------------+
# | Calc profile for multiple expitation dates
# +--------------------------------------------+
MultipleExpsProfile <- function (port, k, param='premium', today=Sys.Date()) {
expdates = ((as.Date(port$exp, format='%d.%m.%Y') %>% unique) - Sys.Date()) %>% as.numeric
return(sapply(expdates, function(x)PortfolioProfile(port, k, param, x) ) %>% rowSums)
}
# +---------------------------------------+
# | Calc params for each base asset price
# +---------------------------------------+
PortfolioProfile = function(port, k, param='premium', t=1/365/24/60 ){
require(QUANTlab)
pv = NULL
for(S in k) {
pv <- c(pv,
PortfolioValue(
param=param,
S=S, T=t/365,
dS=10, port=port)$value
)
}
if(param=='premium') pv = pv - sum(port$quant * port$trades)
return(pv)
}
pdelta = MultipleExpsProfile(port, k, 'delta')
pv = MultipleExpsProfile(port, k)
pv.exp = PortfolioProfile(port, k)
# current underlying
S0 <- 63300
# plot charts
par(mfrow=c(2,1))
plot(k, pv, ylim=range(pv, pv.exp), type="l", col="red")
lines(k, pn.month, type="l", col="blue")
lines(k, pv.exp, type="l", col="black")
abline(v=S0,h=0, col="grey")
grid()
plot(k, pdelta, ylim=range(pdelta), type="l", col="red")
abline(v=S0,h=0, col="grey")
grid()
((boardDownload("RTS-12.15") %>% optionsCurrentInfo())[[1]][['calls']])
source('~/MyR/OptionsPortfilioAnalyser/R/moex_scraping.R')
((boardDownload("RTS-12.15") %>% optionsCurrentInfo())[[1]][['calls']])
((boardDownload("RTS-12.15") %>% optionsCurrentInfo())[[2]][['calls']])
(boardDownload("RTS-12.15") %>% optionsCurrentInfo())[[2]][['calls']])[, c('strike', 'iv)] %>% plot
((boardDownload("RTS-12.15") %>% optionsCurrentInfo())[[2]][['calls']])[, c('strike', 'iv')] %>% plot
par()
par(mflow=c(1,1))
par(mfrow=c(1,1))
((boardDownload("RTS-12.15") %>% optionsCurrentInfo())[[2]][['calls']])[, c('strike', 'iv')] %>% plot
source('~/MyR/OptionsPortfilioAnalyser/R/moex_scraping.R')
((boardDownload("RTS-12.15") %>% optionsCurrentInfo())[[2]][['calls']])[, c('strike', 'iv')] %>% qplot
require(ggplot2)
((boardDownload("RTS-12.15") %>% optionsCurrentInfo())[[2]][['calls']])[, c('strike', 'iv')] %>% qplot
((boardDownload("RTS-12.15") %>% optionsCurrentInfo())[[2]][['calls']])[, c('strike', 'iv')] %>% as.data.frame %>% qplot
((boardDownload("RTS-12.15") %>% optionsCurrentInfo())[[2]][['calls']])[, c('strike', 'iv')] %>% as.data.frame
((boardDownload("RTS-12.15") %>% optionsCurrentInfo())[[2]][['calls']])[, c('strike', 'iv')] %>% as.data.frame %>% qplot(data=.)
((boardDownload("RTS-12.15") %>% optionsCurrentInfo())[[2]][['calls']])[, c('strike', 'iv')] %>% as.data.frame %>% qplot(data=., x=strike, y=iv)
source('~/MyR/OptionsPortfilioAnalyser/R/moex_scraping.R')
source('~/MyR/OptionsPortfilioAnalyser/R/moex_scraping.R')
